import json
import os
from docx import Document

class generate_report():
    def __init__(self, path):
        self.path = path
        self.template = "./dataset/json/template_for_VUL.json"
        self.count = 1
        self.list=["客户文件自行修改了文件，但没有完全采用官方的修补方案，不安全。", "客户文件自行修补了漏洞，位置与官方修补文件相似，安全性未知。", "客户文件似乎使用了官方的修补方案，安全。", "客户文件是使用官方修补过的文件，安全。"]

    def generate(self):
        # Load vul template
        with open(self.template, "r") as f:
            vul_data = json.load(f)

        # Load details
        with open("./temp/report.json", "r") as f:
            dic = json.load(f)

        doc = Document()
        doc.add_heading("TVS REPORT",0)
        p = doc.add_paragraph()
        p.add_run("以下内容为经收集后得到的样例").bold = True

        # File details
        doc.add_heading("待测版本信息:", level = 1)
        infos1 = ["检测时间", "被测源码大小", "文件数量", "文件创建时间", "文件修改时间", "待测源码路径"]
        for info in infos1:
            p = doc.add_paragraph()
            p.add_run(info+": " ).bold = True
            p.add_run(str(dic[info]))

        # 检测结果
        doc.add_heading("断代结果", level = 1)
        infos2 = ["是否和某个版本完全相符", "推测基于某个版本得到的修改后源代码", "相似度"]
        for info in infos2:
            p = doc.add_paragraph()
            p.add_run(info+": " ).bold = True
            p.add_run(str(dic[info]))

        doc.add_heading("漏洞检测结果", level = 1)
        doc.add_paragraph(style='List Number')
        for i in dic["判断结果"]:
            if i == "":
                self.count += 1
                p = doc.add_paragraph()
                p.add_run(str(i))
                doc.add_paragraph(style='List Number')

            elif i in dic["CVE"]:
                for vul_dic in vul_data:  # getting vul from VUL.json
                    if vul_dic["CVE ID"] == i:
                        info7 = ["CVE ID"]
                        for info in info7:
                            p = doc.add_paragraph()
                            p.add_run(info + " : " + str(vul_dic[info])).bold = True

                        infos4 = ["CWE ID", "Version"]  # print CWE ID and its version
                        for info in infos4:
                            doc.add_paragraph(info + " : " + str(vul_dic[info]))

                        doc.add_heading("威胁等级数据检测表 : ", level=3)  # print da BIE and CIA in table form
                        table_rows = [
                            ("威胁等级", "Base Score(CVSS3.1)", "Impact Score(CVSS3.1)",
                             "Exploitability Score(CVSS3.1)"),
                            ("SCORE", str(vul_dic["Base Score(CVSS3.1)"]), str(vul_dic["Impact Score(CVSS3.1)"]),
                             str(vul_dic["Exploitability Score(CVSS3.1)"]))
                        ]
                        table = doc.add_table(rows=len(table_rows), cols=4)
                        table.style = 'TableGrid'

                        for row_number, (威胁等级, Base, Impact, Exploitability) in enumerate(table_rows):
                            row_cells = table.rows[row_number].cells
                            row_cells[0].text = 威胁等级
                            row_cells[1].text = Base
                            row_cells[2].text = Impact
                            row_cells[3].text = Exploitability

                        doc.add_heading("CIA等级检测表 : ", level=3)
                        table_rows = [
                            ("CIA检测", "Confidentiality", "Integrity", "Availability"),
                            ("Level", vul_dic["C"], vul_dic["I"], vul_dic["A"])
                        ]
                        table = doc.add_table(rows=len(table_rows), cols=4)
                        table.style = 'TableGrid'
                        for row_number, (CIA检测, Confidentiality, Integrity, Availability) in enumerate(table_rows):
                            row_cells = table.rows[row_number].cells
                            row_cells[0].text = CIA检测
                            row_cells[1].text = Confidentiality
                            row_cells[2].text = Integrity
                            row_cells[3].text = Availability

            elif i in self.list:
                p = doc.add_paragraph()
                p.add_run("判断结果 : " + i).bold = True

            else:
                p = doc.add_paragraph()
                p.add_run(str(i))

        doc.save("./output/REPORT.docx") #my first 100rows python code, HURRAY!!
        print("")
        print("Report Path:", os.path.abspath("./output/REPORT.docx"))




















