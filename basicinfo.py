import os
import time
import datetime
import bridge

class basic_info():
    def __init__(self,path):
        self.path = path
        self.count = 0

    def print_header(self):
        print("")
        print("##############################################################################################################################################################")
        print("TENSORFLOW VULNERABILITY SCANNER")
        print("##############################################################################################################################################################")
        print("")
        print("##############################################################################################################################################################")
        print("COMMENCING BASIC INFO CHECK...")
        print("##############################################################################################################################################################")

    def show_info(self):
        self.print_header()
        self.show_time()
        self.show_size()
        self.show_filecount()
        self.show_createdmodified()
        self.show_path()

    def show_time(self):
        today = datetime.date.today()
        year = today.year
        bridge.report_dict["检测时间"] = year

        now = datetime.datetime.now()
        current_date = datetime.date.today()
        current_time = now.strftime("%H:%M:%S")
        print("Time of Checking is", current_date, current_time)

    def show_size(self):
        total_size = 0
        start_path = self.path
        for path, dirs, files in os.walk(start_path):
            for f in files:
                fp = os.path.join(path, f)
                total_size += os.path.getsize(fp)
                self.count+=1
        size = round(total_size/1048576,2)
        bridge.report_dict["被测源码大小"] = str(size)+"MB"
        print("Directory size is", size, "MB (", total_size, "Bytes )")

    def show_filecount(self):
        bridge.report_dict["文件数量"] = str(self.count)+"files"
        print('File count is', self.count)

    def return_filecount(self):
        return self.count

    def show_createdmodified(self):
        ti_c = os.path.getctime(self.path)
        ti_m = os.path.getmtime(self.path)
        # Converting the time in seconds to a timestamp
        c_ti = time.ctime(ti_c)
        m_ti = time.ctime(ti_m)
        bridge.report_dict["文件创建时间"] = str(c_ti)
        bridge.report_dict["文件修改时间"] = str(m_ti)
        print("The file located at the path was created at", c_ti, "and was last modified at", m_ti)

    def show_path(self):
        path = os.getcwd() +'\\'+ self.path
        bridge.report_dict["待测源码路径"] = path
        print('Current path to user source code is', path)
